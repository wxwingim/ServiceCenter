// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UIServiceCenter.Model.Data;

namespace UIServiceCenter.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20211210222658_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UIServiceCenter.Model.Admission_for_repair", b =>
                {
                    b.Property<int>("num_admission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("addres_org")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_admission")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date_limit")
                        .HasColumnType("datetime2");

                    b.Property<int>("id_cust_devidCustDev")
                        .HasColumnType("int");

                    b.Property<string>("inn_org")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("mail_org")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("name_org")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("quarantee")
                        .HasColumnType("bit");

                    b.Property<string>("tel_org")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("num_admission");

                    b.HasIndex("id_cust_devidCustDev");

                    b.ToTable("Admission_For_Repairs");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Akt_delivery", b =>
                {
                    b.Property<int>("numDeliveri")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("dateDelivery")
                        .HasColumnType("datetime2");

                    b.HasKey("numDeliveri");

                    b.ToTable("Akt_Deliveries");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Customer", b =>
                {
                    b.Property<int>("idCustom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstCustom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("lastCustom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("mailCustom")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("middleCustom")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("telCustom")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("idCustom");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Customer_device", b =>
                {
                    b.Property<int>("idCustDev")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("defect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idCustom1")
                        .HasColumnType("int");

                    b.Property<int>("keyModel1")
                        .HasColumnType("int");

                    b.Property<string>("mechanicalDamage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCustDev");

                    b.HasIndex("idCustom1");

                    b.HasIndex("keyModel1");

                    b.ToTable("Customer_Devices");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Device_model", b =>
                {
                    b.Property<int>("keyModel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameModel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("typeId1")
                        .HasColumnType("int");

                    b.HasKey("keyModel");

                    b.HasIndex("typeId1");

                    b.ToTable("Device_models");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Device_type", b =>
                {
                    b.Property<int>("typeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("typeId");

                    b.ToTable("Device_types");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Employee", b =>
                {
                    b.Property<int>("idWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("firstWork")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("lastWork")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("mailWork")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("middleWork")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("phoneWork")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idWork");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Service", b =>
                {
                    b.Property<int>("keyService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nameService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priceService")
                        .HasColumnType("int");

                    b.HasKey("keyService");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Work_order", b =>
                {
                    b.Property<int>("numOrder")
                        .HasColumnType("int");

                    b.Property<int>("numAdmission")
                        .HasColumnType("int");

                    b.Property<int>("AdmissionForRepairnum_admission")
                        .HasColumnType("int");

                    b.Property<int>("durationQuarantee")
                        .HasColumnType("int");

                    b.Property<int>("numDeliverynumDeliveri")
                        .HasColumnType("int");

                    b.Property<bool>("statusDelivery")
                        .HasColumnType("bit");

                    b.Property<bool>("statusPaymnt")
                        .HasColumnType("bit");

                    b.Property<string>("statusRepair")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("numOrder", "numAdmission");

                    b.HasIndex("AdmissionForRepairnum_admission");

                    b.HasIndex("numDeliverynumDeliveri");

                    b.ToTable("Work_Orders");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Work_repair", b =>
                {
                    b.Property<int>("numWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("dateReady")
                        .HasColumnType("datetime2");

                    b.Property<int>("idWork1")
                        .HasColumnType("int");

                    b.Property<int>("keyService1")
                        .HasColumnType("int");

                    b.Property<int>("numOrder1")
                        .HasColumnType("int");

                    b.Property<int>("numOrdernumAdmission")
                        .HasColumnType("int");

                    b.HasKey("numWork");

                    b.HasIndex("idWork1");

                    b.HasIndex("keyService1");

                    b.HasIndex("numOrder1", "numOrdernumAdmission");

                    b.ToTable("Work_Repairs");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Admission_for_repair", b =>
                {
                    b.HasOne("UIServiceCenter.Model.Customer_device", "id_cust_dev")
                        .WithMany("admissionForRepairs")
                        .HasForeignKey("id_cust_devidCustDev")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("id_cust_dev");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Customer_device", b =>
                {
                    b.HasOne("UIServiceCenter.Model.Customer", "idCustom")
                        .WithMany("devices")
                        .HasForeignKey("idCustom1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UIServiceCenter.Model.Device_model", "keyModel")
                        .WithMany("devices")
                        .HasForeignKey("keyModel1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("idCustom");

                    b.Navigation("keyModel");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Device_model", b =>
                {
                    b.HasOne("UIServiceCenter.Model.Device_type", "typeId")
                        .WithMany("devices")
                        .HasForeignKey("typeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("typeId");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Work_order", b =>
                {
                    b.HasOne("UIServiceCenter.Model.Admission_for_repair", "AdmissionForRepair")
                        .WithMany("work_Order")
                        .HasForeignKey("AdmissionForRepairnum_admission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UIServiceCenter.Model.Akt_delivery", "numDelivery")
                        .WithMany("workOrders")
                        .HasForeignKey("numDeliverynumDeliveri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdmissionForRepair");

                    b.Navigation("numDelivery");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Work_repair", b =>
                {
                    b.HasOne("UIServiceCenter.Model.Employee", "idWork")
                        .WithMany("workRepairs")
                        .HasForeignKey("idWork1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UIServiceCenter.Model.Service", "keyService")
                        .WithMany("workRepairs")
                        .HasForeignKey("keyService1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UIServiceCenter.Model.Work_order", "numOrder")
                        .WithMany("workRepairs")
                        .HasForeignKey("numOrder1", "numOrdernumAdmission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("idWork");

                    b.Navigation("keyService");

                    b.Navigation("numOrder");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Admission_for_repair", b =>
                {
                    b.Navigation("work_Order");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Akt_delivery", b =>
                {
                    b.Navigation("workOrders");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Customer", b =>
                {
                    b.Navigation("devices");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Customer_device", b =>
                {
                    b.Navigation("admissionForRepairs");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Device_model", b =>
                {
                    b.Navigation("devices");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Device_type", b =>
                {
                    b.Navigation("devices");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Employee", b =>
                {
                    b.Navigation("workRepairs");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Service", b =>
                {
                    b.Navigation("workRepairs");
                });

            modelBuilder.Entity("UIServiceCenter.Model.Work_order", b =>
                {
                    b.Navigation("workRepairs");
                });
#pragma warning restore 612, 618
        }
    }
}
